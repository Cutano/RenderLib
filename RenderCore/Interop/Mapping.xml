<?xml version="1.0" encoding="utf-8"?>
<config id="MyMapping" xmlns="urn:SharpGen.Config">
	<assembly>RenderCore</assembly>
	<namespace>RenderCore</namespace>
	<depends>SharpGen.Runtime</depends>
	
	<sdk name="StdLib" />
	<sdk name="WindowsSdk" version="10.0.19041.0" />

	<include-dir override="true">$(THIS_CONFIG_PATH)/../../ThirdParty/DiligentEngine/DiligentCore/Graphics/GraphicsEngine/interface</include-dir>
	<include-dir override="true">$(THIS_CONFIG_PATH)/../../ThirdParty/DiligentEngine/DiligentCore/Graphics/HLSL2GLSLConverterLib/interface</include-dir>
	<include-dir override="true">$(THIS_CONFIG_PATH)/../../ThirdParty/DiligentEngine/DiligentCore/Platforms/interface</include-dir>
	<include-dir override="true">$(THIS_CONFIG_PATH)/../../ThirdParty/DiligentEngine/DiligentCore/Platforms/Win32/interface</include-dir>
	<include-dir override="true">$(THIS_CONFIG_PATH)/../../ThirdParty/DiligentEngine/DiligentCore/Primitives/interface</include-dir>

	<include-prolog>
		#define _UNICODE 1
		#define UNICODE 1

		#define PLATFORM_WIN32 1
		#define D3D12_SUPPORTED 1
		#define DILIGENT_CPP_INTERFACE 1
		#define DILIGENT_C_INTERFACE 0
	</include-prolog>
	<include file="PlatformDefinitions.h" />
	
	<include file="Win32NativeWindow.h" namespace="RenderCore.Interop" attach="true" />
	
	<include file="BasicTypes.h" namespace="RenderCore.Interop" attach="true" />
	<include file="CheckBaseStructAlignment.hpp" namespace="RenderCore.Interop" attach="true" />
	<include file="CommonDefinitions.h" namespace="RenderCore.Interop" attach="true" />
	<include file="DataBlob.h" namespace="RenderCore.Interop" attach="true" />
	<include file="DebugOutput.h" namespace="RenderCore.Interop" attach="true" />
<!--	<include file="DefineGlobalFuncHelperMacros.h" />-->
<!--	<include file="DefineInterfaceHelperMacros.h" />-->
	<include file="Errors.hpp" namespace="RenderCore.Interop" attach="true" />
	<include file="FileStream.h" namespace="RenderCore.Interop" attach="true" />
	<include file="FlagEnum.h" namespace="RenderCore.Interop" attach="true" />
	<include file="FormatString.hpp" namespace="RenderCore.Interop" attach="true" />
	<include file="InterfaceID.h" namespace="RenderCore.Interop" attach="true" />
	<include file="MemoryAllocator.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Object.h" namespace="RenderCore.Interop" attach="true" />
	<include file="ReferenceCounters.h" namespace="RenderCore.Interop" attach="true" />
<!--	<include file="UndefGlobalFuncHelperMacros.h" />-->
<!--	<include file="UndefInterfaceHelperMacros.h" />-->
	
	<include file="HLSL2GLSLConverter.h" namespace="RenderCore.Interop" attach="true" />

	<include file="APIInfo.h" namespace="RenderCore.Interop" attach="true" />
	<include file="BlendState.h" namespace="RenderCore.Interop" attach="true" />
	<include file="BottomLevelAS.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Buffer.h" namespace="RenderCore.Interop" attach="true" />
	<include file="BufferView.h" namespace="RenderCore.Interop" attach="true" />
	<include file="CommandList.h" namespace="RenderCore.Interop" attach="true" />
	<include file="CommandQueue.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Constants.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Dearchiver.h" namespace="RenderCore.Interop" attach="true" />
	<include file="DepthStencilState.h" namespace="RenderCore.Interop" attach="true" />
	<include file="DeviceContext.h" namespace="RenderCore.Interop" attach="true" />
	<include file="DeviceMemory.h" namespace="RenderCore.Interop" attach="true" />
	<include file="DeviceObject.h" namespace="RenderCore.Interop" attach="true" />
	<include file="EngineFactory.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Fence.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Framebuffer.h" namespace="RenderCore.Interop" attach="true" />
	<include file="GraphicsTypes.h" namespace="RenderCore.Interop" attach="true" />
<!--	<include file="GraphicsTypesX.hpp" namespace="RenderCore.Interop" attach="true" />-->
	<include file="InputLayout.h" namespace="RenderCore.Interop" attach="true" />
	<include file="LoadEngineDll.h" namespace="RenderCore.Interop" attach="true" />
	<include file="PipelineResourceSignature.h" namespace="RenderCore.Interop" attach="true" />
	<include file="PipelineState.h" namespace="RenderCore.Interop" attach="true" />
	<include file="PipelineStateCache.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Query.h" namespace="RenderCore.Interop" attach="true" />
	<include file="RasterizerState.h" namespace="RenderCore.Interop" attach="true" />
	<include file="RenderDevice.h" namespace="RenderCore.Interop" attach="true" />
	<include file="RenderPass.h" namespace="RenderCore.Interop" attach="true" />
	<include file="ResourceMapping.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Sampler.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Shader.h" namespace="RenderCore.Interop" attach="true" />
	<include file="ShaderBindingTable.h" namespace="RenderCore.Interop" attach="true" />
	<include file="ShaderResourceBinding.h" namespace="RenderCore.Interop" attach="true" />
	<include file="ShaderResourceVariable.h" namespace="RenderCore.Interop" attach="true" />
	<include file="SwapChain.h" namespace="RenderCore.Interop" attach="true" />
	<include file="Texture.h" namespace="RenderCore.Interop" attach="true" />
	<include file="TextureView.h" namespace="RenderCore.Interop" attach="true" />
	<include file="TopLevelAS.h" namespace="RenderCore.Interop" attach="true" output="Interop"/>

	<extension>
		<create class="RenderCore.Interop.Functions" visibility="public static" />
	</extension>
	
	<mapping>
		<context>DebugOutput</context>
		<remove function="SetDebugMessageCallback" />
		<context-clear />

		<context>HLSL2GLSLConverter</context>
		<remove function="CreateHLSL2GLSLConverter" />
		<context-clear />

		<context>GraphicsTypes</context>
			<remove field="DeviceObjectAttribs::Name" />
			<map struct="DeviceObjectAttribs" marshal="true" />

			<remove field="GraphicsAdapterInfo::Description" />
			<remove field="GraphicsAdapterInfo::Type" />
			<remove field="GraphicsAdapterInfo::Vendor" />
			<remove field="GraphicsAdapterInfo::VendorId" />
			<remove field="GraphicsAdapterInfo::DeviceId" />
			<remove field="GraphicsAdapterInfo::NumOutputs" />
			<remove field="GraphicsAdapterInfo::Memory" />
			<remove field="GraphicsAdapterInfo::RayTracing" />
			<remove field="GraphicsAdapterInfo::WaveOp" />
			<remove field="GraphicsAdapterInfo::Buffer" />
			<remove field="GraphicsAdapterInfo::Texture" />
			<remove field="GraphicsAdapterInfo::Sampler" />
			<remove field="GraphicsAdapterInfo::MeshShader" />
			<remove field="GraphicsAdapterInfo::ShadingRate" />
			<remove field="GraphicsAdapterInfo::ComputeShader" />
			<remove field="GraphicsAdapterInfo::DrawCommand" />
			<remove field="GraphicsAdapterInfo::SparseResources" />
			<remove field="GraphicsAdapterInfo::Features" />
			<remove field="GraphicsAdapterInfo::Queues" />
			<remove field="GraphicsAdapterInfo::NumQueues" />
			<map struct="GraphicsAdapterInfo" marshal="true" />
		<context-clear />

		<context>Shader</context>
			<remove field="ShaderCreateInfo::FilePath" />
			<remove field="ShaderCreateInfo::pShaderSourceStreamFactory" />
			<remove field="ShaderCreateInfo::ppConversionStream" />
			<remove field="ShaderCreateInfo::Source" />
			<remove field="ShaderCreateInfo::ByteCode" />
			<remove field="ShaderCreateInfo::SourceLength" />
			<remove field="ShaderCreateInfo::ByteCodeSize" />
			<map struct="ShaderCreateInfo" marshal="true" />
		<context-clear />
		
<!--		<map param="IBuffer::CreateView::ViewDesc" type="void" />-->
		
		<map method="IDeviceContext::GetDesc" type="void" />
<!--		<map param="IDeviceContext::SetRenderTargetsExt::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::BeginRenderPass::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::Draw::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::DrawIndexed::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::DrawIndirect::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::DrawIndexedIndirect::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::DrawMesh::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::DrawMeshIndirect::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::DispatchCompute::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::DispatchComputeIndirect::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::DispatchTile::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::GetTileSize::TileSizeX" type="void" />-->
<!--		<map param="IDeviceContext::GetTileSize::TileSizeY" type="void" />-->
<!--		<map param="IDeviceContext::MapBuffer::pMappedData" type="void" />-->
<!--		<map param="IDeviceContext::UpdateTexture::DstBox" type="void" />-->
<!--		<map param="IDeviceContext::UpdateTexture::SubresData" type="void" />-->
<!--		<map param="IDeviceContext::CopyTexture::CopyAttribs" type="void" />-->
<!--		<map param="IDeviceContext::MapTextureSubresource::MappedData" type="void" />-->
<!--		<map param="IDeviceContext::ResolveTextureSubresource::ResolveAttribs" type="void" />-->
<!--		<map param="IDeviceContext::BuildBLAS::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::BuildTLAS::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::CopyBLAS::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::CopyTLAS::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::WriteBLASCompactedSize::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::WriteTLASCompactedSize::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::TraceRays::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::TraceRaysIndirect::Attribs" type="void" />-->
<!--		<map param="IDeviceContext::BindSparseResourceMemory::Attribs" type="void" />-->

		<map method="IDeviceObject::GetDesc" type="void" />

		<map method="IEngineFactory::GetAPIInfo" type="void" />
<!--		<map param="IEngineFactory::EnumerateAdapters::NumAdapters" type="void" />-->
<!--		<map param="IEngineFactory::CreateDearchiver::CreateInfo" type="void" />-->

		<map method="IPipelineState::GetGraphicsPipelineDesc" type="void" />
		<map method="IPipelineState::GetRayTracingPipelineDesc" type="void" />
		<map method="IPipelineState::GetTilePipelineDesc" type="void" />

<!--		<map param="IRenderDevice::CreateBuffer::BuffDesc" type="void" />-->
<!--		<map param="IRenderDevice::CreateShader::ShaderCI" type="void" />-->
<!--		<map param="IRenderDevice::CreateTexture::TexDesc" type="void" />-->
<!--		<map param="IRenderDevice::CreateSampler::SamDesc" type="void" />-->
<!--		<map param="IRenderDevice::CreateResourceMapping::MappingDesc" type="void" />-->
<!--		<map param="IRenderDevice::CreateGraphicsPipelineState::PSOCreateInfo" type="void" />-->
<!--		<map param="IRenderDevice::CreateComputePipelineState::PSOCreateInfo" type="void" />-->
<!--		<map param="IRenderDevice::CreateRayTracingPipelineState::PSOCreateInfo" type="void" />-->
<!--		<map param="IRenderDevice::CreateTilePipelineState::PSOCreateInfo" type="void" />-->
<!--		<map param="IRenderDevice::CreateFence::Desc" type="void" />-->
<!--		<map param="IRenderDevice::CreateQuery::Desc" type="void" />-->
<!--		<map param="IRenderDevice::CreateRenderPass::Desc" type="void" />-->
<!--		<map param="IRenderDevice::CreateFramebuffer::Desc" type="void" />-->
<!--		<map param="IRenderDevice::CreateBLAS::Desc" type="void" />-->
<!--		<map param="IRenderDevice::CreateTLAS::Desc" type="void" />-->
<!--		<map param="IRenderDevice::CreateSBT::Desc" type="void" />-->
<!--		<map param="IRenderDevice::CreatePipelineResourceSignature::Desc" type="void" />-->
<!--		<map param="IRenderDevice::CreateDeviceMemory::CreateInfo" type="void" />-->
<!--		<map param="IRenderDevice::CreatePipelineStateCache::CreateInfo" type="void" />-->
		<map method="IRenderDevice::GetDeviceInfo" type="void" />
		<map method="IRenderDevice::GetAdapterInfo" type="void" />
		<map method="IRenderDevice::GetTextureFormatInfo" type="void" />
		<map method="IRenderDevice::GetTextureFormatInfoExt" type="void" />

<!--		<map param="IShader::GetResourceDesc::ResourceDesc" type="void" />-->
<!--		<map param="IShader::GetBytecode::Size" type="void" />-->

<!--		<map param="IShaderResourceVariable::GetResourceDesc::ResourceDesc" type="void" />-->

		<map method="ISwapChain::GetDesc" type="void" />
<!--		<map param="ISwapChain::SetFullscreenMode::DisplayMode" type="void" />-->

<!--		<map param="ITexture::CreateView::ViewDesc" type="void" />-->
		<map method="ITexture::GetSparseProperties" type="void" />
	</mapping>
</config>